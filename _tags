# OASIS_START
# DO NOT EDIT (digest: 49779cbc836d54dc3a32910eb189e9dd)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library dae_output
"output/dae_output.cmxs": use_dae_output
<output/*.ml{,i}>: pkg_batteries
<output/*.ml{,i}>: pkg_monad-custom
<output/*.ml{,i}>: pkg_msgpack
# Library dae_modeling
"modeling/dae_modeling.cmxs": use_dae_modeling
<modeling/*.ml{,i}>: pkg_batteries
<modeling/*.ml{,i}>: pkg_bigarray
<modeling/*.ml{,i}>: pkg_daestruct
<modeling/*.ml{,i}>: pkg_e2lang
<modeling/*.ml{,i}>: pkg_monad-custom
<modeling/*.ml{,i}>: pkg_msgpack
<modeling/*.ml{,i}>: use_dae_output
# Library dae_simulation
"simulation/dae_simulation.cmxs": use_dae_simulation
<simulation/dae_simulation.{cma,cmxa}>: oasis_library_dae_simulation_native
<simulation/*.ml{,i}>: oasis_library_dae_simulation_native
<simulation/*.ml{,i}>: pkg_batteries
<simulation/*.ml{,i}>: pkg_bigarray
<simulation/*.ml{,i}>: pkg_daestruct
<simulation/*.ml{,i}>: pkg_e2lang
<simulation/*.ml{,i}>: pkg_monad-custom
<simulation/*.ml{,i}>: pkg_msgpack
<simulation/*.ml{,i}>: pkg_pa_comprehension
<simulation/*.ml{,i}>: pkg_sundials_ml
<simulation/*.ml{,i}>: use_dae_modeling
<simulation/*.ml{,i}>: use_dae_output
# Library dae_examples
"examples/dae_examples.cmxs": use_dae_examples
# Executable bounce
<examples/bounce_recon.{native,byte}>: pkg_batteries
<examples/bounce_recon.{native,byte}>: pkg_bigarray
<examples/bounce_recon.{native,byte}>: pkg_daestruct
<examples/bounce_recon.{native,byte}>: pkg_e2lang
<examples/bounce_recon.{native,byte}>: pkg_monad-custom
<examples/bounce_recon.{native,byte}>: pkg_msgpack
<examples/bounce_recon.{native,byte}>: pkg_pa_comprehension
<examples/bounce_recon.{native,byte}>: pkg_sundials_ml
<examples/bounce_recon.{native,byte}>: use_dae_modeling
<examples/bounce_recon.{native,byte}>: use_dae_output
<examples/bounce_recon.{native,byte}>: use_dae_simulation
# Executable bounce_alg
<examples/bounceAlg.{native,byte}>: pkg_batteries
<examples/bounceAlg.{native,byte}>: pkg_bigarray
<examples/bounceAlg.{native,byte}>: pkg_daestruct
<examples/bounceAlg.{native,byte}>: pkg_e2lang
<examples/bounceAlg.{native,byte}>: pkg_monad-custom
<examples/bounceAlg.{native,byte}>: pkg_msgpack
<examples/bounceAlg.{native,byte}>: pkg_pa_comprehension
<examples/bounceAlg.{native,byte}>: pkg_sundials_ml
<examples/bounceAlg.{native,byte}>: use_dae_modeling
<examples/bounceAlg.{native,byte}>: use_dae_output
<examples/bounceAlg.{native,byte}>: use_dae_simulation
# Executable sawtooth
<examples/sawtooth.{native,byte}>: pkg_batteries
<examples/sawtooth.{native,byte}>: pkg_bigarray
<examples/sawtooth.{native,byte}>: pkg_daestruct
<examples/sawtooth.{native,byte}>: pkg_e2lang
<examples/sawtooth.{native,byte}>: pkg_monad-custom
<examples/sawtooth.{native,byte}>: pkg_msgpack
<examples/sawtooth.{native,byte}>: pkg_pa_comprehension
<examples/sawtooth.{native,byte}>: pkg_sundials_ml
<examples/sawtooth.{native,byte}>: use_dae_modeling
<examples/sawtooth.{native,byte}>: use_dae_output
<examples/sawtooth.{native,byte}>: use_dae_simulation
# Executable sawtooth_variable
<examples/structChange.{native,byte}>: pkg_batteries
<examples/structChange.{native,byte}>: pkg_bigarray
<examples/structChange.{native,byte}>: pkg_daestruct
<examples/structChange.{native,byte}>: pkg_e2lang
<examples/structChange.{native,byte}>: pkg_monad-custom
<examples/structChange.{native,byte}>: pkg_msgpack
<examples/structChange.{native,byte}>: pkg_pa_comprehension
<examples/structChange.{native,byte}>: pkg_sundials_ml
<examples/structChange.{native,byte}>: use_dae_modeling
<examples/structChange.{native,byte}>: use_dae_output
<examples/structChange.{native,byte}>: use_dae_simulation
<examples/*.ml{,i}>: pkg_batteries
<examples/*.ml{,i}>: pkg_bigarray
<examples/*.ml{,i}>: pkg_daestruct
<examples/*.ml{,i}>: pkg_e2lang
<examples/*.ml{,i}>: pkg_monad-custom
<examples/*.ml{,i}>: pkg_msgpack
<examples/*.ml{,i}>: pkg_pa_comprehension
<examples/*.ml{,i}>: pkg_sundials_ml
<examples/*.ml{,i}>: use_dae_modeling
<examples/*.ml{,i}>: use_dae_output
<examples/*.ml{,i}>: use_dae_simulation
# Executable coreTests
<tests/coreTests.{native,byte}>: pkg_batteries
<tests/coreTests.{native,byte}>: pkg_bigarray
<tests/coreTests.{native,byte}>: pkg_daestruct
<tests/coreTests.{native,byte}>: pkg_e2lang
<tests/coreTests.{native,byte}>: pkg_monad-custom
<tests/coreTests.{native,byte}>: pkg_msgpack
<tests/coreTests.{native,byte}>: pkg_oUnit
<tests/coreTests.{native,byte}>: use_dae_modeling
<tests/coreTests.{native,byte}>: use_dae_output
# Executable flatteningTests
<tests/flatTests.{native,byte}>: pkg_batteries
<tests/flatTests.{native,byte}>: pkg_bigarray
<tests/flatTests.{native,byte}>: pkg_daestruct
<tests/flatTests.{native,byte}>: pkg_e2lang
<tests/flatTests.{native,byte}>: pkg_monad-custom
<tests/flatTests.{native,byte}>: pkg_msgpack
<tests/flatTests.{native,byte}>: pkg_oUnit
<tests/flatTests.{native,byte}>: pkg_pa_comprehension
<tests/flatTests.{native,byte}>: pkg_sundials_ml
<tests/flatTests.{native,byte}>: use_dae_modeling
<tests/flatTests.{native,byte}>: use_dae_output
<tests/flatTests.{native,byte}>: use_dae_simulation
# Executable ooTests
<tests/ooTests.{native,byte}>: pkg_batteries
<tests/ooTests.{native,byte}>: pkg_bigarray
<tests/ooTests.{native,byte}>: pkg_daestruct
<tests/ooTests.{native,byte}>: pkg_e2lang
<tests/ooTests.{native,byte}>: pkg_monad-custom
<tests/ooTests.{native,byte}>: pkg_msgpack
<tests/ooTests.{native,byte}>: pkg_oUnit
<tests/ooTests.{native,byte}>: pkg_pa_comprehension
<tests/ooTests.{native,byte}>: pkg_sundials_ml
<tests/ooTests.{native,byte}>: use_dae_modeling
<tests/ooTests.{native,byte}>: use_dae_output
<tests/ooTests.{native,byte}>: use_dae_simulation
# Executable simTests
<tests/simTests.{native,byte}>: pkg_batteries
<tests/simTests.{native,byte}>: pkg_bigarray
<tests/simTests.{native,byte}>: pkg_daestruct
<tests/simTests.{native,byte}>: pkg_e2lang
<tests/simTests.{native,byte}>: pkg_monad-custom
<tests/simTests.{native,byte}>: pkg_msgpack
<tests/simTests.{native,byte}>: pkg_oUnit
<tests/simTests.{native,byte}>: pkg_pa_comprehension
<tests/simTests.{native,byte}>: pkg_sundials_ml
<tests/simTests.{native,byte}>: use_dae_modeling
<tests/simTests.{native,byte}>: use_dae_output
<tests/simTests.{native,byte}>: use_dae_simulation
<tests/*.ml{,i}>: pkg_batteries
<tests/*.ml{,i}>: pkg_bigarray
<tests/*.ml{,i}>: pkg_daestruct
<tests/*.ml{,i}>: pkg_e2lang
<tests/*.ml{,i}>: pkg_monad-custom
<tests/*.ml{,i}>: pkg_msgpack
<tests/*.ml{,i}>: pkg_oUnit
<tests/*.ml{,i}>: pkg_pa_comprehension
<tests/*.ml{,i}>: pkg_sundials_ml
<tests/*.ml{,i}>: use_dae_modeling
<tests/*.ml{,i}>: use_dae_output
<tests/*.ml{,i}>: use_dae_simulation
# OASIS_STOP
<**/*.ml>: syntax_camlp4o
